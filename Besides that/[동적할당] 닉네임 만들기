#include <iostream>

using namespace std;

typedef struct tagInfo
{
	char cNicName[39];
	int iHp = 100;
	int iAttack = 20;
}INFO;

INFO* NicName()
{
	INFO* UserName = new INFO();

	cout << "닉네임을 입력하세요" << endl;
	cin >> UserName->cNicName;

	return UserName;
}

int main()
{
	 // 포인터 = 포인터, 동적 할당은 포인터로 주소 값을 가리킨다
  // 동적 할당은 힙 메모리 영역을 늘였다 줄였다 할 수 있기 때문에
	// 문자열도 삽입이 가능하다
	// 배열의 경우 문자열은 바꿀 수 있지만, 포인터의 경우 문자열은 바꿀 수 없다

	INFO* UserInfo = { };
	UserInfo = NicName();

	cout << "정보를 생성합니다" << endl;
	cout << "유저 :" << UserInfo -> cNicName << endl;
	cout << "HP : " << UserInfo->iHp << endl;
	cout << "ATTACK : " << UserInfo->iAttack << endl;

	delete(UserInfo);
// 지금 문장에서는 프로그램이 금방 끝나서 delete를 하는 것과 안 하는 것이 비슷하지만, 나중에 긴 코드를 사용할 때는 큰일이 날 수 있기 때문에 
//습관을 들이는 것이 좋다
}
