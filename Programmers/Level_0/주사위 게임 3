#include <iostream>
#include <stdlib.h>
using namespace std;

// 함수 선언
int AllTrue(int* a, int* b, int* c, int* d);
int AllFalse(int* a, int* b, int* c, int* d);
int ThreeTrue(int* a, int* b, int* c, int* d);
int EqulTwoTrue(int* a, int* b, int* c, int* d);
int EqulTwoFalse(int* a, int* b, int* c, int* d);

int main()
{
    int answer;

    int a, b, c, d;
    cout << "4개의 숫자 입력 : ";
    cin >> a >> b >> c >> d;
    cout << endl;

    int iAllTrue = AllTrue(&a, &b, &c, &d);
    int iAllFalse = AllFalse(&a, &b, &c, &d);
    int iThreeTrue = ThreeTrue(&a, &b, &c, &d);
    int iTwoTrue = EqulTwoTrue(&a, &b, &c, &d);
    int iTwoFalse = EqulTwoFalse(&a, &b, &c, &d);

    int NoZero[] = { iAllTrue, iAllFalse, iThreeTrue, iTwoTrue, iTwoFalse };

    for (int i = 0; i < 5; i++)
    {
        if (NoZero[i] != 0)
        {
            cout << NoZero[i] << endl;
            return NoZero[i];
        }
    }

    return 0;
}

// 모두 같을 때
int AllTrue(int* a, int* b, int* c, int* d) 
{
    if (*a == *b && *b == *c && *c == *d)
        return 1111 * *a;

    return 0;
}

// 세 개가 같을 때
int ThreeTrue(int* a, int* b, int* c, int* d)
{
    // 포인터 배열
    int* arr[4] = { a, b, c, d };

    int Notequl(0);
    int NotequlNumber;
    int equl(0);
    int equlNum(0);

    for (int i = 0; i < 4; i++)
    {
        for (int j = 0; j < 4; j++)
        {
            if (*arr[i] != *arr[j])
            {
                ++Notequl;
                equl = *arr[j];
            }
            else if (*arr[i] == *arr[j])
            {
                ++equlNum;
            }
        }   
        if (equlNum == 2)
            return 0;

        if (Notequl == 3)
        {
            NotequlNumber = *arr[i];

            return (10 * equl + NotequlNumber) * (10 * equl + NotequlNumber);
        }

        // 3개가 다르지 않다면 다시 초기화
        equl = 0;
        Notequl = 0;
    }
    return 0;
}

// 두 개씩 같을 때
int EqulTwoTrue(int* a, int* b, int* c, int* d)
{
    int* arr[4] = { a, b, c, d };

    int iOne(0);
    int iTwo(0);
    int iCount(0);

    for (int i = 0; i < 4; i++)
    {   
        for(int j = i + 1; j < 4 - i; j++)
        {
            if (*arr[i] == *arr[j])
            {
                if (iOne == 0)
                    iOne = *arr[i];
                else if (iTwo == 0 && iOne != *arr[i])
                    iTwo = *arr[i];
            }
        }
    }

    if (iTwo != 0 && iOne != 0)
        return (iOne + iTwo) * abs(iOne - iTwo);
    else
        return 0;
}

// 두개가 같으며 나머지는 다를 때
int EqulTwoFalse(int* a, int* b, int* c, int* d)
{
    int* arr[4] = { a, b, c, d };
    int iEqulNumber;
    int iCompare_1(0);
    int iCompare_2(0);

    int iCount(0);
    int answer(0);

    // 같은 숫자 찾기
    for (int i = 0; i < 4; i++)
    {
        for (int j = i + 1; j < 4 - i; j++)
        {
            if (*arr[i] == *arr[j])
            {
                iEqulNumber = *arr[i];
                ++iCount;
            }
        }
    }

    if (iCount != 1)
        return 0;

    // 다른 숫자 찾기
    for (int i = 0; i < 4; i++)
    {
        if (*arr[i] != iEqulNumber)
        {
            if (iCompare_1 == 0)
                iCompare_1 = *arr[i];
            else if (iCompare_1 == *arr[i])
                return 0;
            else if (iCompare_2 == 0)
                iCompare_2 = *arr[i];
         }
    }

    return iCompare_1 * iCompare_2;
}

// 모두 다를 때
int AllFalse(int* a, int* b, int* c, int* d)
{
    int* arr[4] = { a, b, c, d };
    int iCount(0);
    int min(10);

    for (int i = 0; i < 4; i++)
    {
        for (int j = i + 1; j < 4 - i; j++)
        {
            if (*arr[i] == *arr[j])
                return 0;
        }
    }

    for (int i = 0; i < 4; i++)
    {
        if (*arr[i] < min)
             min = *arr[i];
    }
    return min;
}
